/*
 * SPDX-FileCopyrightText: Copyright The TrustedFirmware-M Contributors
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 */

#ifndef __FWU_CONFIG_H__
#define __FWU_CONFIG_H__

/* This file contains device specific configurations in FWU partition based
 * on MCUboot.
 */

/* Components of the device. When porting a specific bootloader to FWU partition,
 * the bootloader specific image types can be defined here.
 */
#define FWU_COMPONENT_NUMBER              6

/* Maximum number of FWU Images
 * FWU_COMPONENT_NUMBER takes into account the fact our image index is starting from 1 and also we have an ESRT image
 */
#define FWU_IMAGE_COUNT                   (FWU_COMPONENT_NUMBER - 2)

/* sizeof(struct efi_system_resource_entry)
 * Size of one ESRT v1 Image entry structure object
 */
#define ESRT_IMAGE_ENTRY_SIZE             40

/* sizeof(struct efi_system_resource_table) - sizeof(struct efi_system_resource_entry)
 * Size of remaining fields of ESRT v1 t
 */
#define ESRT_REMAINING_FIELDS_SIZE        16

#if FWU_COMPONENT_NUMBER > 1
#define FWU_COMPONENT_ID_SECURE           0x00U
#define FWU_COMPONENT_ID_NONSECURE        0x01U
#else
#define FWU_COMPONENT_ID_FULL             0x00U
#endif

/* The maximum size of an image digest in bytes. This is dependent
 * on the hash algorithm used.
 */
#define TFM_FWU_MAX_DIGEST_SIZE              ((FWU_IMAGE_COUNT * ESRT_IMAGE_ENTRY_SIZE) + ESRT_REMAINING_FIELDS_SIZE)

/* The maximum permitted size for block in psa_fwu_write(), in bytes. */
#define TFM_CONFIG_FWU_MAX_WRITE_SIZE   @TFM_CONFIG_FWU_MAX_WRITE_SIZE@

/* The maximum permitted size for manifest in psa_fwu_start(), in bytes. */
#define TFM_CONFIG_FWU_MAX_MANIFEST_SIZE   @TFM_CONFIG_FWU_MAX_MANIFEST_SIZE@

/* Whether TRIAL component state is supported or not. This is device specific
 * configuration.
 */
#cmakedefine FWU_SUPPORT_TRIAL_STATE

#endif /* __FWU_CONFIG_H__ */
